{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hendr\\\\OneDrive\\\\Documents\\\\Thinkful\\\\flashcardProject-main\\\\src\\\\Layout\\\\Deck\\\\EditDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { updateDeck, readDeck } from \"../../utils/api\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport DeckForm from \"./DeckForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditDeck() {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  const initialFormState = {\n    name: \"\",\n    description: \"\"\n  };\n  const [form, setForm] = useState(initialFormState);\n  useEffect(() => {\n    const ac = new AbortController();\n\n    async function fetchDeck() {\n      try {\n        const response = await readDeck(deckId, ac.signal);\n        setForm(response);\n      } catch (error) {\n        if (error.type !== \"AbortError\") {\n          console.log(error);\n        }\n      }\n    }\n\n    fetchDeck();\n    return () => ac.abort();\n  }, [deckId]);\n\n  const handleChange = _ref => {\n    let {\n      target\n    } = _ref;\n    setForm({ ...form,\n      [target.name]: target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    async function fetchDeck() {\n      updateDeck(form);\n      setForm(initialFormState);\n      history.push(`/decks/${deckId}`);\n    }\n\n    fetchDeck();\n  };\n\n  const handleCancel = event => {\n    event.preventDefault();\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(DeckForm, {\n    handleCancel: handleCancel,\n    handleSubmit: handleSubmit,\n    handleChange: handleChange,\n    form: form,\n    title: \"Edit\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n}\n\n_s(EditDeck, \"VL/n+zJbREtUjJ91qEmSBaIji2I=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["C:/Users/hendr/OneDrive/Documents/Thinkful/flashcardProject-main/src/Layout/Deck/EditDeck.js"],"names":["React","useState","useEffect","updateDeck","readDeck","useParams","useHistory","DeckForm","EditDeck","deckId","history","initialFormState","name","description","form","setForm","ac","AbortController","fetchDeck","response","signal","error","type","console","log","abort","handleChange","target","value","handleSubmit","event","preventDefault","push","handleCancel"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,iBAArC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,eAAe,SAASC,QAAT,GAAmB;AAAA;;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAaJ,SAAS,EAA5B;AACA,QAAMK,OAAO,GAAGJ,UAAU,EAA1B;AACA,QAAMK,gBAAgB,GAAG;AACvBC,IAAAA,IAAI,EAAE,EADiB;AAEvBC,IAAAA,WAAW,EAAE;AAFU,GAAzB;AAKA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAACU,gBAAD,CAAhC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,EAAE,GAAG,IAAIC,eAAJ,EAAX;;AACA,mBAAeC,SAAf,GAA2B;AACzB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMf,QAAQ,CAACK,MAAD,EAASO,EAAE,CAACI,MAAZ,CAA/B;AACAL,QAAAA,OAAO,CAACI,QAAD,CAAP;AACD,OAHD,CAGE,OAAOE,KAAP,EAAc;AACd,YAAIA,KAAK,CAACC,IAAN,KAAe,YAAnB,EAAiC;AAC/BC,UAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD;AACF;AACF;;AACDH,IAAAA,SAAS;AACT,WAAO,MAAMF,EAAE,CAACS,KAAH,EAAb;AACD,GAdQ,EAcN,CAAChB,MAAD,CAdM,CAAT;;AAgBA,QAAMiB,YAAY,GAAG,QAAgB;AAAA,QAAf;AAAEC,MAAAA;AAAF,KAAe;AACnCZ,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,OAACa,MAAM,CAACf,IAAR,GAAee,MAAM,CAACC;AAAjC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;;AACA,mBAAeb,SAAf,GAA2B;AACzBf,MAAAA,UAAU,CAACW,IAAD,CAAV;AACAC,MAAAA,OAAO,CAACJ,gBAAD,CAAP;AACAD,MAAAA,OAAO,CAACsB,IAAR,CAAc,UAASvB,MAAO,EAA9B;AACD;;AACDS,IAAAA,SAAS;AACV,GARD;;AAUA,QAAMe,YAAY,GAAIH,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACArB,IAAAA,OAAO,CAACsB,IAAR,CAAa,GAAb;AACD,GAHD;;AAKA,sBACE,QAAC,QAAD;AACE,IAAA,YAAY,EAAEC,YADhB;AAEE,IAAA,YAAY,EAAEJ,YAFhB;AAGE,IAAA,YAAY,EAAEH,YAHhB;AAIE,IAAA,IAAI,EAAEZ,IAJR;AAKE,IAAA,KAAK,EAAE;AALT;AAAA;AAAA;AAAA;AAAA,UADF;AASH;;GAtDuBN,Q;UACDH,S,EACHC,U;;;KAFIE,Q","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { updateDeck, readDeck } from \"../../utils/api\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport DeckForm from \"./DeckForm\";\n\nexport default function EditDeck(){\n    const { deckId } = useParams();\n    const history = useHistory();\n    const initialFormState = {\n      name: \"\",\n      description: \"\",\n    };\n\n    const [form, setForm] = useState(initialFormState);\n\n    useEffect(() => {\n      const ac = new AbortController();\n      async function fetchDeck() {\n        try {\n          const response = await readDeck(deckId, ac.signal);\n          setForm(response);\n        } catch (error) {\n          if (error.type !== \"AbortError\") {\n            console.log(error);\n          }\n        }\n      }\n      fetchDeck();\n      return () => ac.abort();\n    }, [deckId]);\n\n    const handleChange = ({ target }) => {\n      setForm({ ...form, [target.name]: target.value });\n    };\n\n    const handleSubmit = (event) => {\n      event.preventDefault();\n      async function fetchDeck() {\n        updateDeck(form);\n        setForm(initialFormState);\n        history.push(`/decks/${deckId}`);\n      }\n      fetchDeck();\n    };\n\n    const handleCancel = (event) => {\n      event.preventDefault();\n      history.push(\"/\");\n    };\n\n    return (\n      <DeckForm\n        handleCancel={handleCancel}\n        handleSubmit={handleSubmit}\n        handleChange={handleChange}\n        form={form}\n        title={\"Edit\"}\n      />\n    );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}