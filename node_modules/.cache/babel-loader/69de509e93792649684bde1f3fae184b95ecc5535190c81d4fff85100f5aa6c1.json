{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hendr\\\\OneDrive\\\\Documents\\\\Thinkful\\\\flashcardProject-main\\\\src\\\\Layout\\\\Deck\\\\DeckList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { listDecks } from '../../utils/api';\nimport Deck from './Deck';\nimport { PlusLg } from 'react-bootstrap-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DeckList() {\n  _s();\n\n  const [decks, setDecks] = useState([]);\n  useEffect(() => {\n    const ac = new AbortController();\n\n    async function fetchDecks() {\n      try {\n        const response = await listDecks(ac.signal);\n        setDecks(response);\n      } catch (error) {\n        if (error.type === \"AbortError\") {\n          console.log(\"aborted\");\n        } else {\n          console.log(error);\n        }\n      }\n    }\n\n    fetchDecks();\n    return () => ac.abort();\n  }, []);\n  const list = decks.map((_ref, index) => {\n    let {\n      id,\n      name,\n      description,\n      cards,\n      handleDelete\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(Deck, {\n      handleDelete: () => handleDelete(index),\n      id: id,\n      name: name,\n      description: description,\n      cards: cards\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-secondary mb-2\",\n      to: \"/decks/new\",\n      children: [/*#__PURE__*/_jsxDEV(PlusLg, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 12\n      }, this), \" Create Deck\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DeckList, \"f+alwG6Mds7XNzaPIkXWhs/xDB4=\");\n\n_c = DeckList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckList\");","map":{"version":3,"sources":["C:/Users/hendr/OneDrive/Documents/Thinkful/flashcardProject-main/src/Layout/Deck/DeckList.js"],"names":["React","useState","useEffect","Link","listDecks","Deck","PlusLg","DeckList","decks","setDecks","ac","AbortController","fetchDecks","response","signal","error","type","console","log","abort","list","map","index","id","name","description","cards","handleDelete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,MAAT,QAAuB,uBAAvB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,EAAE,GAAG,IAAIC,eAAJ,EAAX;;AAEA,mBAAeC,UAAf,GAA4B;AACxB,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMT,SAAS,CAACM,EAAE,CAACI,MAAJ,CAAhC;AACAL,QAAAA,QAAQ,CAACI,QAAD,CAAR;AACH,OAHD,CAGE,OAAOE,KAAP,EAAc;AACZ,YAAIA,KAAK,CAACC,IAAN,KAAe,YAAnB,EAAiC;AAC7BC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,SAFD,MAEO;AACHD,UAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACH;AACJ;AACJ;;AACDH,IAAAA,UAAU;AACV,WAAO,MAAMF,EAAE,CAACS,KAAH,EAAb;AACH,GAjBQ,EAiBN,EAjBM,CAAT;AAkBA,QAAMC,IAAI,GAAGZ,KAAK,CAACa,GAAN,CAAU,OAA+CC,KAA/C;AAAA,QAAC;AAACC,MAAAA,EAAD;AAAKC,MAAAA,IAAL;AAAWC,MAAAA,WAAX;AAAwBC,MAAAA,KAAxB;AAA+BC,MAAAA;AAA/B,KAAD;AAAA,wBACvB,QAAC,IAAD;AACA,MAAA,YAAY,EAAE,MAAMA,YAAY,CAACL,KAAD,CADhC;AAGA,MAAA,EAAE,EAAEC,EAHJ;AAIA,MAAA,IAAI,EAAEC,IAJN;AAKA,MAAA,WAAW,EAAEC,WALb;AAMA,MAAA,KAAK,EAAEC;AANP,OAEKJ,KAFL;AAAA;AAAA;AAAA;AAAA,YADuB;AAAA,GAAV,CAAb;AAUA,sBACI;AAAA,4BACA,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,wBAAhB;AAAyC,MAAA,EAAE,EAAC,YAA5C;AAAA,8BACG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADH,EACY,cADZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAIA;AAAA,gBACKF;AADL;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAzCuBb,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\"\nimport { listDecks } from '../../utils/api';\nimport Deck from './Deck';\nimport { PlusLg } from 'react-bootstrap-icons';\n\nexport default function DeckList() {\n    const [decks, setDecks] = useState([]);\n    useEffect(() => {\n        const ac = new AbortController();\n\n        async function fetchDecks() {\n            try {\n                const response = await listDecks(ac.signal);\n                setDecks(response);\n            } catch (error) {\n                if (error.type === \"AbortError\") {\n                    console.log(\"aborted\");\n                } else {\n                    console.log(error);\n                }\n            }\n        }\n        fetchDecks();\n        return () => ac.abort();\n    }, [])\n    const list = decks.map(({id, name, description, cards, handleDelete}, index) => \n    <Deck \n    handleDelete={() => handleDelete(index)}\n    key={index} \n    id={id} \n    name={name} \n    description={description} \n    cards={cards} \n    />\n    );\n    return (\n        <div>\n        <Link className=\"btn btn-secondary mb-2\" to=\"/decks/new\">\n           <PlusLg/> Create Deck\n        </Link>\n        <div>\n            {list}\n        </div>\n        </div>\n        \n    )\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}