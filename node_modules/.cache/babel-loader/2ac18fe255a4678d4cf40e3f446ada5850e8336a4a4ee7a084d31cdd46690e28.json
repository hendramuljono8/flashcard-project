{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hendr\\\\OneDrive\\\\Documents\\\\Thinkful\\\\flashcardProject-main\\\\src\\\\Layout\\\\Cards\\\\EditCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { readDeck, readCard, updateCard } from \"../../utils/api\";\nimport CardForm from \"./CardForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditCard() {\n  _s();\n\n  const initialFormState = {\n    front: \"\",\n    back: \"\"\n  };\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const [setDeck] = useState([]);\n  const [form, setForm] = useState(initialFormState);\n  const history = useHistory();\n  useEffect(() => {\n    const ac = new AbortController();\n\n    async function fetchDeck() {\n      try {\n        const response = await readDeck(deckId, ac.signal);\n        setDeck(response);\n      } catch (error) {\n        if (error.type !== \"AbortError\") {\n          console.log(error);\n        }\n      }\n    }\n\n    fetchDeck();\n    return () => ac.abort();\n  }, [deckId, setDeck]);\n  useEffect(() => {\n    const ac = new AbortController();\n\n    async function fetchCard() {\n      try {\n        const response = await readCard(cardId, ac.signal);\n        setForm(response);\n      } catch (error) {\n        if (error.type !== \"AbortError\") {\n          console.log(error);\n        }\n      }\n    }\n\n    fetchCard();\n    return () => ac.abort();\n  }, [cardId]);\n\n  const handleChange = _ref => {\n    let {\n      target\n    } = _ref;\n    setForm({ ...form,\n      [target.name]: target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    async function fetchUpdateCard() {\n      updateCard(form);\n      setForm({\n        initialFormState\n      });\n      history.push(`/decks/${deckId}`);\n    }\n\n    fetchUpdateCard();\n  };\n\n  const handleCancel = event => {\n    event.preventDefault();\n    history.push(`/decks/${deckId}`);\n  };\n\n  console.log(form);\n  return /*#__PURE__*/_jsxDEV(CardForm, {\n    form: form,\n    handleSubmit: handleSubmit,\n    handleChange: handleChange,\n    handleCancel: handleCancel,\n    title: \"Edit\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditCard, \"9fqqDPerl43RkS6xtSv4nWIMaN0=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"sources":["C:/Users/hendr/OneDrive/Documents/Thinkful/flashcardProject-main/src/Layout/Cards/EditCard.js"],"names":["React","useState","useEffect","useParams","useHistory","readDeck","readCard","updateCard","CardForm","EditCard","initialFormState","front","back","deckId","cardId","setDeck","form","setForm","history","ac","AbortController","fetchDeck","response","signal","error","type","console","log","abort","fetchCard","handleChange","target","name","value","handleSubmit","event","preventDefault","fetchUpdateCard","push","handleCancel"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { readDeck, readCard, updateCard } from \"../../utils/api\";\nimport CardForm from \"./CardForm\";\n\nexport default function EditCard() {\n  const initialFormState = {\n    front: \"\",\n    back: \"\",\n  };\n\n  const { deckId, cardId } = useParams();\n\n  const [setDeck] = useState([]);\n  const [form, setForm] = useState(initialFormState);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const ac = new AbortController();\n    async function fetchDeck() {\n      try {\n        const response = await readDeck(deckId, ac.signal);\n        setDeck(response);\n      } catch (error) {\n        if (error.type !== \"AbortError\") {\n          console.log(error);\n        }\n      }\n    }\n    fetchDeck();\n    return () => ac.abort();\n  }, [deckId, setDeck]);\n\n  useEffect(() => {\n    const ac = new AbortController();\n    async function fetchCard() {\n      try {\n        const response = await readCard(cardId, ac.signal);\n        setForm(response);\n      } catch (error) {\n        if (error.type !== \"AbortError\") {\n          console.log(error);\n        }\n      }\n    }\n    fetchCard();\n    return () => ac.abort();\n  }, [cardId]);\n\n  const handleChange = ({ target }) => {\n    setForm({ ...form, [target.name]: target.value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    async function fetchUpdateCard() {\n      updateCard(form);\n      setForm({ initialFormState });\n      history.push(`/decks/${deckId}`);\n    }\n    fetchUpdateCard();\n  };\n\n  const handleCancel = (event) => {\n    event.preventDefault();\n    history.push(`/decks/${deckId}`);\n  };\n\n  console.log(form);\n\n  return (\n    <CardForm\n      form={form}\n      handleSubmit={handleSubmit}\n      handleChange={handleChange}\n      handleCancel={handleCancel}\n      title={\"Edit\"}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}